---
architecture: BDR-Always-ON
cluster_name: {{ vars['cluster_name'] }}
cluster_tags: {}

cluster_vars:
  bdr_database: edb
  bdr_node_group: bdrgroup
  bdr_version: '5'
  postgres_data_dir: {{ vars['pg_data'] }}
  postgres_wal_dir: {{ vars['pg_wal'] }}
  postgres_coredump_filter: '0xff'
  postgres_version: '{{ vars['pg_version'] }}'
  postgresql_flavour: epas
  postgres_user: {{ vars['pg_owner'] }}
  postgres_group: {{ vars['pg_group'] }}
  postgres_conf_settings:
    autovacuum_work_mem: '1GB'
    checkpoint_completion_target: '0.93'
    checkpoint_timeout: '30min'
    cpu_tuple_cost: '0.03'
    effective_cache_size: '80GB'
    effective_io_concurrency: '200'
    #logical_decoding_work_mem: '1GB'
    maintenance_work_mem: '1GB'
    max_parallel_maintenance_workers: '8'
    max_connections: '150'
    max_replication_slots: '40'
    max_wal_size: '200GB'
    min_wal_size: '1GB'
    random_page_cost: '1.1'
    shared_buffers: '16GB'
    wal_compression: 'on'
    wal_buffers: '64MB'
    work_mem: '32MB'
    max_parallel_workers_per_gather: '8'
    shared_preload_libraries: "'pg_stat_statements, bdr'"
    edb_dynatune: '100'
    # BDR
    bdr.max_writers_per_subscription: '16'
    #bdr.writer_input_queue_size: '500MB'
    #bdr.writer_output_queue_size: '500kB'
    #bdr.global_lock_timeout: '0'
    #bdr.global_lock_statement_timeout: '0'
    # BDR logical decoding
    bdr.default_streaming_mode: 'auto'
    bdr.receive_lcr: 'off'
    bdr.enable_wal_decoder: 'off'
    archive_mode: 'off'
    max_worker_processes: '50'
  pg_systemd_service_path: '/etc/systemd/system/postgres.service'
  pg_systemd_alias: 'edb-as-{{ vars['pg_version'] }}.service'
  preferred_python_version: python3
  edb_repositories:
  - standard
  - postgres_distributed
  yum_repository_list:
  - EDB
  - EPEL
  use_volatile_subscriptions: false
  publications:
  - type: bdr
    database: {{ bdr_dbname }}
    replication_sets:
    - name: bdrgroup
      autoadd_tables: false
      replicate_delete: false
      replicate_insert: false
      replicate_truncate: false
      replicate_update: false
    - name: bdrdatagroup
      autoadd_tables: true
      replicate_delete: true
      replicate_insert: true
      replicate_truncate: true
      replicate_update: true
  bdr_extensions:
    - btree_gist
    - bdr

ssh_key_file: {{ ssh_priv_key }}

locations:
{% for region in infra['aws']['regions'].keys() %}
- Name: {{ region }}
{% endfor %}

instance_defaults:
  platform: bare
  vars:
    ansible_user: {{ infra['aws']['ssh_user'] }}

instances:
- Name: bdr1
  node: 1
  role:
  - bdr
  location: {{ servers['bdr1']['region'] }}
  public_ip: {{ servers['bdr1']['public_ip'] }}
  private_ip: {{ servers['bdr1']['private_ip'] }}
- Name: bdr2
  node: 2
  role:
  - bdr
  location: {{ servers['bdr2']['region'] }}
  public_ip: {{ servers['bdr2']['public_ip'] }}
  private_ip: {{ servers['bdr2']['private_ip'] }}
